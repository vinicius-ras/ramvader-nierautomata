//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TrainerApp.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TrainerApp.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string strBtCancel {
            get {
                return ResourceManager.GetString("strBtCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        public static string strBtClose {
            get {
                return ResourceManager.GetString("strBtClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ok.
        /// </summary>
        public static string strBtOk {
            get {
                return ResourceManager.GetString("strBtOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to enemy hits deal no damage on you..
        /// </summary>
        public static string strChkCheatDescriptionGodMode {
            get {
                return ResourceManager.GetString("strChkCheatDescriptionGodMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to collected items are set to 50 units, and are never decreased..
        /// </summary>
        public static string strChkCheatDescriptionInfiniteItems {
            get {
                return ResourceManager.GetString("strChkCheatDescriptionInfiniteItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to every enemy killed adds +100k EXP to the player..
        /// </summary>
        public static string strChkCheatDescriptionLevelUp {
            get {
                return ResourceManager.GetString("strChkCheatDescriptionLevelUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kill enemies and bosses with a single hit..
        /// </summary>
        public static string strChkCheatDescriptionOneHitKills {
            get {
                return ResourceManager.GetString("strChkCheatDescriptionOneHitKills", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to God Mode:.
        /// </summary>
        public static string strChkCheatPromptGodMode {
            get {
                return ResourceManager.GetString("strChkCheatPromptGodMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Infinite Items:.
        /// </summary>
        public static string strChkCheatPromptInfiniteItems {
            get {
                return ResourceManager.GetString("strChkCheatPromptInfiniteItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Easy Level-Up:.
        /// </summary>
        public static string strChkCheatPromptLevelUp {
            get {
                return ResourceManager.GetString("strChkCheatPromptLevelUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One Hit Kills:.
        /// </summary>
        public static string strChkCheatPromptOneHitKills {
            get {
                return ResourceManager.GetString("strChkCheatPromptOneHitKills", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available hacks.
        /// </summary>
        public static string strGroupBoxHeaderCheats {
            get {
                return ResourceManager.GetString("strGroupBoxHeaderCheats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game info.
        /// </summary>
        public static string strGroupBoxHeaderGameInfo {
            get {
                return ResourceManager.GetString("strGroupBoxHeaderGameInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Support us!.
        /// </summary>
        public static string strGroupBoxHeaderSupport {
            get {
                return ResourceManager.GetString("strGroupBoxHeaderSupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;h1&gt;How do I use the trainer?&lt;/h1&gt;
        ///&lt;p&gt;First, you should run the trainer and enable and configure all the cheats you want to enable. The available cheats are at the &quot;Available hacks&quot; area of the trainer&apos;s main window.&lt;/p&gt;
        ///
        ///&lt;p&gt;After configuring the cheats the way you want, just run the game. The trainer will automatically detect the game and apply the cheats you have configured. You may have to wait about 3 seconds for this process to happen.&lt;/p&gt;
        ///
        ///&lt;p&gt;Once the trainer is running and you are in the game, y [rest of string was truncated]&quot;;.
        /// </summary>
        public static string strHelpContentsHTML {
            get {
                return ResourceManager.GetString("strHelpContentsHTML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help contents.
        /// </summary>
        public static string strHelpDialogTitle {
            get {
                return ResourceManager.GetString("strHelpDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Click to donate via PayPal)..
        /// </summary>
        public static string strLblClickToDonate {
            get {
                return ResourceManager.GetString("strLblClickToDonate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game&apos;s process:.
        /// </summary>
        public static string strLblGamesProcessPrompt {
            get {
                return ResourceManager.GetString("strLblGamesProcessPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game not detected... Please, run the game!.
        /// </summary>
        public static string strLblNotAttached {
            get {
                return ResourceManager.GetString("strLblNotAttached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PID:.
        /// </summary>
        public static string strLblProcessIDPrompt {
            get {
                return ResourceManager.GetString("strLblProcessIDPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please, consider supporting the developer!.
        /// </summary>
        public static string strLblRequestForDonation {
            get {
                return ResourceManager.GetString("strLblRequestForDonation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required game version:.
        /// </summary>
        public static string strLblRequiredGameVersionPrompt {
            get {
                return ResourceManager.GetString("strLblRequiredGameVersionPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam version (tested on July 08, 2018).
        /// </summary>
        public static string strLblRequiredGameVersionValue {
            get {
                return ResourceManager.GetString("strLblRequiredGameVersionValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RAMvader-NieRAutomata by Vinicius.RAS.
        /// </summary>
        public static string strMainWindowTitle {
            get {
                return ResourceManager.GetString("strMainWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit.
        /// </summary>
        public static string strMenuItemExit {
            get {
                return ResourceManager.GetString("strMenuItemExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game search options....
        /// </summary>
        public static string strMenuItemGameSearchOptions {
            get {
                return ResourceManager.GetString("strMenuItemGameSearchOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I need help!.
        /// </summary>
        public static string strMenuItemHelp {
            get {
                return ResourceManager.GetString("strMenuItemHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select game process manually.
        /// </summary>
        public static string strMenuItemManualAttachment {
            get {
                return ResourceManager.GetString("strMenuItemManualAttachment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More options....
        /// </summary>
        public static string strMenuItemMoreOptions {
            get {
                return ResourceManager.GetString("strMenuItemMoreOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search for the game&apos;s process automatically.
        /// </summary>
        public static string strMenuItemSearchAutomatically {
            get {
                return ResourceManager.GetString("strMenuItemSearchAutomatically", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The trainer is already attached to the game&apos;s process. Proceeding with this action will detach the trainer from the game&apos;s process.
        ///
        ///Are you sure you want to detach the trainer from the game&apos;s process?.
        /// </summary>
        public static string strMsgConfirmDetachment {
            get {
                return ResourceManager.GetString("strMsgConfirmDetachment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm detachment?.
        /// </summary>
        public static string strMsgConfirmDetachmentCaption {
            get {
                return ResourceManager.GetString("strMsgConfirmDetachmentCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to attach to the game&apos;s process!
        ///Do you want the trainer to continue trying to automatically attach to the game?.
        /// </summary>
        public static string strMsgFailedToAttach {
            get {
                return ResourceManager.GetString("strMsgFailedToAttach", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to attach.
        /// </summary>
        public static string strMsgFailedToAttachCaption {
            get {
                return ResourceManager.GetString("strMsgFailedToAttachCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;NONE&gt;.
        /// </summary>
        public static string strNoneTag {
            get {
                return ResourceManager.GetString("strNoneTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the game&apos;s process.
        /// </summary>
        public static string strProcessSelectionDialogTitle {
            get {
                return ResourceManager.GetString("strProcessSelectionDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you wish to support the developer, please click this button to help by making a donation.
        ///Your donation allows the developer to keep the projects updated and to make new ones.
        ///
        ///This button opens a PayPal donation web page..
        /// </summary>
        public static string strToolTipDonateButton {
            get {
                return ResourceManager.GetString("strToolTipDonateButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows the process where the game has been detected.
        ///When you run the game, the trainer will automatically detect it and display its process here.
        ///
        ///Although this is not recommended, you can manually select the game&apos;s process by going to the menu:
        ///More options &gt; Select game process manually.
        /// </summary>
        public static string strToolTipLabelGameProcess {
            get {
                return ResourceManager.GetString("strToolTipLabelGameProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Closes the trainer..
        /// </summary>
        public static string strToolTipMenuItemExit {
            get {
                return ResourceManager.GetString("strToolTipMenuItemExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click for information on how to use the trainer..
        /// </summary>
        public static string strToolTipMenuItemHelp {
            get {
                return ResourceManager.GetString("strToolTipMenuItemHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stops trainer&apos;s &quot;automatic detection&quot; of the game, and lets you manually select the game&apos;s process.
        ///This is for advanced users only, and is NOT recommended..
        /// </summary>
        public static string strToolTipMenuItemManualAttachment {
            get {
                return ResourceManager.GetString("strToolTipMenuItemManualAttachment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type here to filter the list of available processes below.
        /// </summary>
        public static string strToolTipProcessesFilterField {
            get {
                return ResourceManager.GetString("strToolTipProcessesFilterField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of the game this trainer is compatible with.
        ///If your game has a different version, this trainer will probably NOT work with it..
        /// </summary>
        public static string strToolTipRequiredGameVersion {
            get {
                return ResourceManager.GetString("strToolTipRequiredGameVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you have stoped the trainer from looking for the game, click here to make it restart the automatic searching..
        /// </summary>
        public static string strToolTipRestartLookingForGame {
            get {
                return ResourceManager.GetString("strToolTipRestartLookingForGame", resourceCulture);
            }
        }
    }
}
